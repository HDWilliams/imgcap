"""INCLUDING ALL DB MODELS IN ONE FILE 
FOR EASIER LOADING AND CONNECTING TABLES
ORDER OF IMPORT MATTERS"""
from sqlalchemy import String, Column, Integer, DateTime
from sqlalchemy.sql import func
from db import db
from pgvector.sqlalchemy import Vector



ImgTags = db.Table('imgtags', db.metadata,
    db.Column('image_id', db.Integer, db.ForeignKey('Img.id')),
    db.Column('tag_id', db.Integer, db.ForeignKey('Tag.id'))
)

class Img(db.Model):
    """Image storage. image stored as link to s3"""
    __tablename__ = "Img"

    id = Column(Integer, primary_key=True)
    name = Column(String(200))
    img_uri = Column(String)
    image_type = Column(String(200))
    description = Column(String(200))
    date_created = Column(DateTime, default=func.now())
    tags = db.relationship('Tag', secondary=ImgTags, backref=db.backref('images'))

    def __repr__(self) -> str:
        return f"<Img {self.id}>"
    
class Tag(db.Model):
    """tags for images generated by image labeling model"""
    __tablename__ = "Tag"
    id = Column(Integer, primary_key=True)
    value = Column(String(200))
    embedding = Column(Vector(50))

    def __repr__(self) -> str:
        return f"<Tags {self.id}>"


